{"version":3,"sources":["component/jumbotron.js","utils/api.js","component/searchBar.js","component/table.js","App.js","serviceWorker.js","index.js"],"names":["Jumbotron","className","id","axios","get","SearchBar","props","onChange","handleInputChange","value","search","name","type","placeholder","Table","state","sortOrder","results","event","target","searchTerm","toLowerCase","setState","sortByFName","sortedEmployees","sort","a","b","first","reverse","sortByLName","last","API","then","res","data","console","log","catch","err","this","onClick","map","item","includes","key","login","uuid","src","picture","thumbnail","alt","phone","email","DateFormat","dob","date","React","Component","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f9d823ea.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../styles/jumbotron.css\";\r\n\r\nfunction Jumbotron() {\r\n  return (\r\n    <div>\r\n      <div className=\"jumbotron jumbotron-fluid\" id=\"jumboTron\">\r\n        <div className=\"container\">\r\n          <h1 className=\"display-4\">\r\n            <i className=\"fas fa-user-friends\"></i> <b>Company Directory</b>\r\n          </h1>\r\n          <p className=\"lead\">\r\n            Search by first or last name or select a column heading to sort.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","import axios from \"axios\";\r\nconst url = \"https://randomuser.me/api/?results=30\";\r\n\r\n//api call\r\nexport default {\r\n  ApiSearch: function () {\r\n    return axios.get(url);\r\n  },\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"../styles/searchBar.css\";\r\n\r\nconst SearchBar = (props) => {\r\n  return (\r\n    <form>\r\n      <div className=\"form-group search-widget\">\r\n        <div className=\"input-group mb-3\">\r\n          <input\r\n            onChange={props.handleInputChange}\r\n            value={props.search}\r\n            name=\"search\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Search directory for Employee\"\r\n            id=\"search\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport API from \"../utils/api.js\";\r\nimport Search from \"./searchBar\";\r\nimport \"../styles/table.css\";\r\n\r\n//npm package to reformat DOB\r\nimport DateFormat from \"dateformat\";\r\n\r\nclass Table extends React.Component {\r\n  state = {\r\n    sortOrder: \"\",\r\n    results: [],\r\n    search: \"\",\r\n  };\r\n\r\n  //Api call for randomuser.me\r\n  componentDidMount() {\r\n    API.ApiSearch()\r\n      .then((res) => {\r\n        this.setState({ results: res.data.results });\r\n        console.log(this.state.results);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  //Handle input in search bar\r\n  handleInputChange = (event) => {\r\n    if (event.target.name === \"search\") {\r\n      const searchTerm = event.target.value.toLowerCase();\r\n      this.setState({\r\n        search: searchTerm,\r\n      });\r\n    }\r\n  };\r\n\r\n  //Sort by first name\r\n  sortByFName = () => {\r\n    const sortedEmployees = this.state.results.sort((a, b) => {\r\n      if (b.name.first > a.name.first) {\r\n        return -1;\r\n      }\r\n      if (a.name.first > b.name.first) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n\r\n    if (this.state.sortOrder === \"DESC\") {\r\n      sortedEmployees.reverse();\r\n      this.setState({ sortOrder: \"ASC\" });\r\n    } else {\r\n      this.setState({ sortOrder: \"DESC\" });\r\n    }\r\n    this.setState({ results: sortedEmployees });\r\n  };\r\n\r\n  //Sort by last name\r\n  sortByLName = () => {\r\n    const sortedEmployees = this.state.results.sort((a, b) => {\r\n      if (b.name.last > a.name.last) {\r\n        return -1;\r\n      }\r\n      if (a.name.last > b.name.last) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n    if (this.state.sortOrder === \"DESC\") {\r\n      sortedEmployees.reverse();\r\n      this.setState({ sortOrder: \"ASC\" });\r\n    } else {\r\n      this.setState({ sortOrder: \"DESC\" });\r\n    }\r\n    this.setState({ results: sortedEmployees });\r\n  };\r\n\r\n  //Render items\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Search\r\n          handleInputChange={this.handleInputChange}\r\n          search={this.state.search}\r\n        />\r\n\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-striped table-resposive text-center table-hover\">\r\n            <thead>\r\n              <tr>\r\n                <th>Image</th>\r\n                <th>\r\n                  First Name{\" \"}\r\n                  <span className=\"downArrow\" onClick={this.sortByFName}></span>\r\n                </th>\r\n                <th>\r\n                  Last Name{\" \"}\r\n                  <span className=\"downArrow\" onClick={this.sortByLName}></span>\r\n                </th>\r\n                <th>Phone</th>\r\n                <th>Email</th>\r\n                <th>DOB </th>\r\n              </tr>\r\n            </thead>\r\n\r\n            {\r\n              //First Name sort\r\n              this.state.results &&\r\n                this.state.results.map((item) =>\r\n                  item.name.first.toLowerCase().includes(this.state.search) ? (\r\n                    <tbody key={item.login.uuid}>\r\n                      <tr>\r\n                        <td>\r\n                          <img\r\n                            src={item.picture.thumbnail}\r\n                            className=\"rounded-circle\"\r\n                            alt=\"thumbnail\"\r\n                          />\r\n                        </td>\r\n                        <td>{item.name.first}</td>\r\n                        <td>{item.name.last}</td>\r\n                        <td>{item.phone}</td>\r\n                        <td>{item.email}</td>\r\n                        <td>{DateFormat(item.dob.date, \"mediumDate\")}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  ) : //Last Name sort\r\n                  item.name.last.toLowerCase().includes(this.state.search) ? (\r\n                    <tbody key={item.login.uuid}>\r\n                      <tr>\r\n                        <td>\r\n                          <img\r\n                            src={item.picture.thumbnail}\r\n                            className=\"rounded-circle\"\r\n                            alt=\"thumbnail\"\r\n                          />\r\n                        </td>\r\n                        <td>{item.name.first}</td>\r\n                        <td>{item.name.last}</td>\r\n                        <td>{item.phone} </td>\r\n                        <td>{item.email}</td>\r\n                        <td>{DateFormat(item.dob.date, \"mediumDate\")}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  ) : null\r\n                )\r\n            }\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport Jumbotron from \"./component/jumbotron\";\r\nimport Table from \"./component/table\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Jumbotron />\r\n      <Table />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service worker\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}